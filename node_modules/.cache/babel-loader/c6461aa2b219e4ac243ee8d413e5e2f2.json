{"ast":null,"code":"import \"antd-mobile/lib/list/style\";\nimport _List from \"antd-mobile/lib/list\";\nimport \"antd-mobile/lib/button/style\";\nimport _Button from \"antd-mobile/lib/button\";\nimport \"antd-mobile/lib/white-space/style\";\nimport _WhiteSpace from \"antd-mobile/lib/white-space\";\nimport \"antd-mobile/lib/input-item/style\";\nimport _InputItem from \"antd-mobile/lib/input-item\";\nimport _defineProperty from \"/Users/jiadaye/workspace/cirko/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jiadaye/workspace/cirko/src/components/Home/Account/PasswordChange/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { withFirebase } from '../../../Firebase';\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const passwordOne = this.state.passwordOne;\n      this.props.firebase.doPasswordUpdate(passwordOne).then(() => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChangePassword = event => {\n      this.setState({\n        passwordOne: event\n      });\n    };\n\n    this.onChangeConfirm = event => {\n      this.setState({\n        passwordTwo: event\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const _this$state = this.state,\n          passwordOne = _this$state.passwordOne,\n          passwordTwo = _this$state.passwordTwo,\n          error = _this$state.error;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n    return React.createElement(_List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(_InputItem, {\n      name: \"passwordOne\",\n      value: passwordOne,\n      onChange: this.onChangePassword,\n      type: \"password\",\n      placeholder: \"New Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(_InputItem, {\n      name: \"passwordTwo\",\n      value: passwordTwo,\n      onChange: this.onChangeConfirm,\n      type: \"password\",\n      placeholder: \"Confirm New Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), \" \", React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      disabled: isInvalid,\n      type: \"primary\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Reset My Password\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nexport default withFirebase(PasswordChangeForm);","map":{"version":3,"sources":["/Users/jiadaye/workspace/cirko/src/components/Home/Account/PasswordChange/index.js"],"names":["React","Component","withFirebase","INITIAL_STATE","passwordOne","passwordTwo","error","PasswordChangeForm","constructor","props","onSubmit","event","state","firebase","doPasswordUpdate","then","setState","catch","preventDefault","onChangePassword","onChangeConfirm","render","isInvalid","message"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE,EADK;AAElBC,EAAAA,WAAW,EAAE,EAFK;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAAtB;;AAKA,MAAMC,kBAAN,SAAiCN,SAAjC,CAA2C;AACvCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAInBC,QAJmB,GAIRC,KAAK,IAAI;AAAA,YACRP,WADQ,GACQ,KAAKQ,KADb,CACRR,WADQ;AAEhB,WAAKK,KAAL,CAAWI,QAAX,CACKC,gBADL,CACsBV,WADtB,EAEKW,IAFL,CAEU,MAAM;AACR,aAAKC,QAAL,mBAAmBb,aAAnB;AACH,OAJL,EAKKc,KALL,CAKWX,KAAK,IAAI;AACZ,aAAKU,QAAL,CAAc;AAAEV,UAAAA;AAAF,SAAd;AACH,OAPL;AAQAK,MAAAA,KAAK,CAACO,cAAN;AACH,KAfkB;;AAAA,SAgBnBC,gBAhBmB,GAgBAR,KAAK,IAAI;AACxB,WAAKK,QAAL,CAAc;AAAEZ,QAAAA,WAAW,EAAEO;AAAf,OAAd;AACH,KAlBkB;;AAAA,SAmBnBS,eAnBmB,GAmBDT,KAAK,IAAI;AACvB,WAAKK,QAAL,CAAc;AAAEX,QAAAA,WAAW,EAAEM;AAAf,OAAd;AACH,KArBkB;;AAEf,SAAKC,KAAL,qBAAkBT,aAAlB;AACH;;AAmBDkB,EAAAA,MAAM,GAAG;AAAA,wBACuC,KAAKT,KAD5C;AAAA,UACGR,WADH,eACGA,WADH;AAAA,UACgBC,WADhB,eACgBA,WADhB;AAAA,UAC6BC,KAD7B,eAC6BA,KAD7B;AAEL,UAAMgB,SAAS,GACXlB,WAAW,KAAKC,WAAhB,IAA+BD,WAAW,KAAK,EADnD;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,aADT;AAEI,MAAA,KAAK,EAAEA,WAFX;AAGI,MAAA,QAAQ,EAAE,KAAKe,gBAHnB;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,WAAW,EAAC,cALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI;AACI,MAAA,IAAI,EAAC,aADT;AAEI,MAAA,KAAK,EAAEd,WAFX;AAGI,MAAA,QAAQ,EAAE,KAAKe,eAHnB;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,WAAW,EAAC,sBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,OAekB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAflB,EAgBI;AAAQ,MAAA,QAAQ,EAAEE,SAAlB;AAA6B,MAAA,IAAI,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAE,KAAKZ,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAhBJ,EAmBKJ,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACiB,OAAV,CAnBd,CADJ;AAuBH;;AAlDsC;;AAoD3C,eAAerB,YAAY,CAACK,kBAAD,CAA3B","sourcesContent":["import React, { Component } from 'react';\nimport { withFirebase } from '../../../Firebase';\nimport { List, Button, InputItem, WhiteSpace } from 'antd-mobile'\nconst INITIAL_STATE = {\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\nclass PasswordChangeForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n    onSubmit = event => {\n        const { passwordOne } = this.state;\n        this.props.firebase\n            .doPasswordUpdate(passwordOne)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n        event.preventDefault();\n    };\n    onChangePassword = event => {\n        this.setState({ passwordOne: event });\n    };\n    onChangeConfirm = event => {\n        this.setState({ passwordTwo: event });\n    };\n    render() {\n        const { passwordOne, passwordTwo, error } = this.state;\n        const isInvalid =\n            passwordOne !== passwordTwo || passwordOne === '';\n        return (\n            <List>\n                <InputItem\n                    name=\"passwordOne\"\n                    value={passwordOne}\n                    onChange={this.onChangePassword}\n                    type=\"password\"\n                    placeholder=\"New Password\"\n                />\n                <InputItem\n                    name=\"passwordTwo\"\n                    value={passwordTwo}\n                    onChange={this.onChangeConfirm}\n                    type=\"password\"\n                    placeholder=\"Confirm New Password\"\n                />\n                <WhiteSpace/> <WhiteSpace/>\n                <Button disabled={isInvalid} type=\"primary\" onClick={this.onSubmit}>\n                    Reset My Password\n                </Button>\n                {error && <p>{error.message}</p>}\n            </List>\n        );\n    }\n}\nexport default withFirebase(PasswordChangeForm);"]},"metadata":{},"sourceType":"module"}