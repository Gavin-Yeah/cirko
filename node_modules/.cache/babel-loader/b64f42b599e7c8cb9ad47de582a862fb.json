{"ast":null,"code":"import \"antd-mobile/lib/button/style/css\";\nimport _Button from \"antd-mobile/lib/button\";\nimport \"antd-mobile/lib/white-space/style/css\";\nimport _WhiteSpace from \"antd-mobile/lib/white-space\";\nimport \"antd-mobile/lib/input-item/style/css\";\nimport _InputItem from \"antd-mobile/lib/input-item\";\nimport \"antd-mobile/lib/flex/style/css\";\nimport _Flex from \"antd-mobile/lib/flex\";\nimport _defineProperty from \"/Users/jiadaye/workspace/cirko/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jiadaye/workspace/cirko/src/components/SignIn/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport \"./index.css\";\nimport * as firebaseui from 'firebaseui';\n\nconst SignInPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"SignIn\"), React.createElement(SignInForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}), React.createElement(SignInGoogle, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}), React.createElement(PasswordForgetLink, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), React.createElement(SignUpLink, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.emailRef = React.createRef();\n    this.passwordRef = React.createRef();\n\n    this.onSubmit = event => {\n      const email = this.emailRef.current.value;\n      const password = this.passwordRef.current.value;\n      this.props.firebase.doSignInWithEmailAndPassword(email, password).then(() => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const isInvalid = password === '' || email === '';\n    return React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(_Flex, {\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"image\",\n      src: require(\"../icons/cirko-trans.png\"),\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(_InputItem, {\n      name: \"email\",\n      ref: this.emailRef,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(_InputItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"password\",\n      ref: this.passwordRef,\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      type: \"warning\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Sign In\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, error.message)));\n  }\n\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      this.props.firebase.doSignInWithGoogle().then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: {}\n        }, {\n          merge: true\n        });\n      }).then(socialAuthUser => {\n        this.setState({\n          error: null\n        });\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      error: null\n    };\n  }\n\n  render() {\n    const error = this.state.error;\n    return React.createElement(\"form\", {\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: 'submit',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), \"Sign In with Google\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\nconst SignInGoogle = compose(withRouter, withFirebase)(SignInGoogleBase);\nexport default SignInPage;\nexport { SignInForm };","map":{"version":3,"sources":["/Users/jiadaye/workspace/cirko/src/components/SignIn/index.js"],"names":["React","Component","withRouter","compose","withFirebase","ROUTES","SignUpLink","PasswordForgetLink","firebaseui","SignInPage","INITIAL_STATE","email","password","error","SignInFormBase","constructor","props","emailRef","createRef","passwordRef","onSubmit","event","current","value","firebase","doSignInWithEmailAndPassword","then","setState","history","push","HOME","catch","preventDefault","onChange","target","name","state","render","isInvalid","require","message","SignInGoogleBase","doSignInWithGoogle","socialAuthUser","user","uid","set","username","displayName","roles","merge","SignInForm","SignInGoogle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport \"./index.css\"\nimport { Flex, WhiteSpace, InputItem, Button } from 'antd-mobile';\nimport * as firebaseui from 'firebaseui'\nconst SignInPage = () => (\n    <div>\n        <h1>SignIn</h1>\n        <SignInForm />\n        <SignInGoogle />\n        <PasswordForgetLink />\n        <SignUpLink />\n    </div>\n);\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n};\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n    emailRef= React.createRef();\n    passwordRef= React.createRef();\n\n\n\n    onSubmit = event => {\n\n        const email = this.emailRef.current.value;\n        const password =this.passwordRef.current.value;\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n        event.preventDefault();\n    };\n    onChange = event => {\n         this.setState({ [event.target.name]: event.target.value });\n\n    };\n    render() {\n\n        const isInvalid = password === '' || email === '';\n        return (\n            <div className=\"flex-container\">\n                <Flex justify=\"center\">\n\n                    <img className={\"image\"} src={require(\"../icons/cirko-trans.png\")} alt=\"\"/>\n\n                </Flex>\n            <form >\n                <InputItem\n\n                        name=\"email\"\n\n                        ref={this.emailRef}\n                        type=\"text\"\n                        placeholder=\"Email Address\"\n\n                />\n\n                <WhiteSpace/>\n                <InputItem>\n                    <input\n                        name=\"password\"\n                       \n                       ref={this.passwordRef}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                </InputItem>\n                <WhiteSpace/>\n                <WhiteSpace/>\n                <Button  type=\"warning\" onClick={this.onSubmit}>\n                    Sign In\n                </Button>\n                {error && <p>{error.message}</p>}\n            </form>\n            </div>\n        );\n    }\n}\n\n\n\nclass SignInGoogleBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { error: null };\n    }\n    onSubmit = event => {\n        this.props.firebase\n            .doSignInWithGoogle()\n            .then(socialAuthUser => {\n                // Create a user in your Firebase Realtime Database too\n                return this.props.firebase\n                    .user(socialAuthUser.user.uid)\n                    .set({\n                        username: socialAuthUser.user.displayName,\n                        email: socialAuthUser.user.email,\n                        roles: {},\n                    },\n                        { merge: true });\n            })\n            .then(socialAuthUser => {\n                this.setState({ error: null });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n        event.preventDefault();\n    };\n    render() {\n        const { error } = this.state;\n        return (\n            <form onClick={this.onSubmit} >\n                <Button type={'submit'}  >\n                    <span><img src=\"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg\" alt=\"\"/></span>\n                    Sign In with Google</Button>\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\n\n\n\nconst SignInForm = compose(\n    withRouter,\n    withFirebase,\n)(SignInFormBase);\n\n\nconst SignInGoogle = compose(\n    withRouter,\n    withFirebase,\n)(SignInGoogleBase);\n\nexport default SignInPage;\nexport { SignInForm };"]},"metadata":{},"sourceType":"module"}