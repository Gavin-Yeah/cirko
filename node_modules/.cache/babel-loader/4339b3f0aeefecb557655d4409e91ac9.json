{"ast":null,"code":"import _defineProperty from\"/Users/jiadaye/workspace/cirko/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/jiadaye/workspace/cirko/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jiadaye/workspace/cirko/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/jiadaye/workspace/cirko/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/jiadaye/workspace/cirko/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/jiadaye/workspace/cirko/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Component}from'react';import{withFirebase}from'../Firebase';import{compose}from'recompose';import{withAuthorization}from'../Session';import*as ROLES from'../../constants/roles';var AdminPage=/*#__PURE__*/function(_Component){_inherits(AdminPage,_Component);function AdminPage(props){var _this;_classCallCheck(this,AdminPage);_this=_possibleConstructorReturn(this,_getPrototypeOf(AdminPage).call(this,props));_this.state={loading:false,users:[]};return _this;}_createClass(AdminPage,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.setState({loading:true});this.unsubscribe=this.props.firebase.users().onSnapshot(function(snapshot){var users=[];snapshot.forEach(function(doc){return users.push(_objectSpread({},doc.data(),{uid:doc.id}));});_this2.setState({users:users,loading:false});});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.unsubscribe();}},{key:\"render\",value:function render(){var _this$state=this.state,users=_this$state.users,loading=_this$state.loading;return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Admin\"),React.createElement(\"p\",null,\"The Admin Page is accessible by every signed in admin user.\"),loading&&React.createElement(\"div\",null,\"Loading ...\"),React.createElement(UserList,{users:users}));}}]);return AdminPage;}(Component);var UserList=function UserList(_ref){var users=_ref.users;return React.createElement(\"ul\",null,users.map(function(user){return React.createElement(\"li\",{key:user.uid},React.createElement(\"span\",null,React.createElement(\"strong\",null,\"ID:\"),\" \",user.uid),React.createElement(\"span\",null,React.createElement(\"strong\",null,\"E-Mail:\"),\" \",user.email),React.createElement(\"span\",null,React.createElement(\"strong\",null,\"Username:\"),\" \",user.username));}));};var condition=function condition(authUser){return authUser&&!!authUser.roles[ROLES.ADMIN];};export default compose(withAuthorization(condition),withFirebase)(AdminPage);","map":{"version":3,"sources":["/Users/jiadaye/workspace/cirko/src/components/Admin/index.js"],"names":["React","Component","withFirebase","compose","withAuthorization","ROLES","AdminPage","props","state","loading","users","setState","unsubscribe","firebase","onSnapshot","snapshot","forEach","doc","push","data","uid","id","UserList","map","user","email","username","condition","authUser","roles","ADMIN"],"mappings":"k8CAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,YAAT,KAA6B,aAA7B,CAEA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,iBAAT,KAAkC,YAAlC,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,uBAAvB,C,GAEMC,CAAAA,S,mEACF,mBAAYC,KAAZ,CAAmB,2CACf,2EAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACTC,OAAO,CAAE,KADA,CAETC,KAAK,CAAE,EAFE,CAAb,CAFe,aAMlB,C,mFACmB,iBAChB,KAAKC,QAAL,CAAc,CAAEF,OAAO,CAAE,IAAX,CAAd,EACA,KAAKG,WAAL,CAAmB,KAAKL,KAAL,CAAWM,QAAX,CACdH,KADc,GAEdI,UAFc,CAEH,SAAAC,QAAQ,CAAI,CACpB,GAAIL,CAAAA,KAAK,CAAG,EAAZ,CACAK,QAAQ,CAACC,OAAT,CAAiB,SAAAC,GAAG,QAChBP,CAAAA,KAAK,CAACQ,IAAN,kBAAgBD,GAAG,CAACE,IAAJ,EAAhB,EAA4BC,GAAG,CAAEH,GAAG,CAACI,EAArC,GADgB,EAApB,EAGA,MAAI,CAACV,QAAL,CAAc,CACVD,KAAK,CAALA,KADU,CAEVD,OAAO,CAAE,KAFC,CAAd,EAIH,CAXc,CAAnB,CAYH,C,mEAEsB,CACnB,KAAKG,WAAL,GACH,C,uCACQ,iBACsB,KAAKJ,KAD3B,CACGE,KADH,aACGA,KADH,CACUD,OADV,aACUA,OADV,CAEL,MACI,gCACI,sCADJ,CAEI,2FAFJ,CAMKA,OAAO,EAAI,6CANhB,CAOI,oBAAC,QAAD,EAAU,KAAK,CAAEC,KAAjB,EAPJ,CADJ,CAWH,C,uBAxCmBT,S,EA0CxB,GAAMqB,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,UAAGZ,CAAAA,KAAH,MAAGA,KAAH,OACb,+BACKA,KAAK,CAACa,GAAN,CAAU,SAAAC,IAAI,QACX,2BAAI,GAAG,CAAEA,IAAI,CAACJ,GAAd,EACJ,gCACE,wCADF,KACwBI,IAAI,CAACJ,GAD7B,CADI,CAII,gCACN,4CADM,KACoBI,IAAI,CAACC,KADzB,CAJJ,CAOI,gCACN,8CADM,KACsBD,IAAI,CAACE,QAD3B,CAPJ,CADW,EAAd,CADL,CADa,EAAjB,CAiBA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,QAAQ,QACtBA,CAAAA,QAAQ,EAAI,CAAC,CAACA,QAAQ,CAACC,KAAT,CAAexB,KAAK,CAACyB,KAArB,CADQ,EAA1B,CAEA,cAAe3B,CAAAA,OAAO,CAClBC,iBAAiB,CAACuB,SAAD,CADC,CAElBzB,YAFkB,CAAP,CAGbI,SAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\n\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../Session';\nimport * as ROLES from '../../constants/roles';\n\nclass AdminPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            users: [],\n        };\n    }\n    componentDidMount() {\n        this.setState({ loading: true });\n        this.unsubscribe = this.props.firebase\n            .users()\n            .onSnapshot(snapshot => {\n                let users = [];\n                snapshot.forEach(doc =>\n                    users.push({ ...doc.data(), uid: doc.id }),\n                );\n                this.setState({\n                    users,\n                    loading: false,\n                });\n            });\n    }\n\n    componentWillUnmount() {\n        this.unsubscribe();\n    }\n    render() {\n        const { users, loading } = this.state;\n        return (\n            <div>\n                <h1>Admin</h1>\n                <p>\n                    The Admin Page is accessible by every signed in admin user.\n                </p>\n\n                {loading && <div>Loading ...</div>}\n                <UserList users={users} />\n            </div>\n        );\n    }\n}\nconst UserList = ({ users }) => (\n    <ul>\n        {users.map(user => (\n            <li key={user.uid}>\n        <span>\n          <strong>ID:</strong> {user.uid}\n        </span>\n                <span>\n          <strong>E-Mail:</strong> {user.email}\n        </span>\n                <span>\n          <strong>Username:</strong> {user.username}\n        </span>\n            </li>\n        ))}\n    </ul>\n);\nconst condition = authUser =>\n    authUser && !!authUser.roles[ROLES.ADMIN];\nexport default compose(\n    withAuthorization(condition),\n    withFirebase,\n)(AdminPage);"]},"metadata":{},"sourceType":"module"}