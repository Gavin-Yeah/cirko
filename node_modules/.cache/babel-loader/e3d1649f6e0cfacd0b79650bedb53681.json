{"ast":null,"code":"function get_all_post_by_id(firebase, user_id, callback) {\n  get_all_post_id_from_db(firebase, user_id, callback);\n}\n\nfunction get_all_post_id_from_db(firebase, user_id, callback) {\n  //get db reference\n  var db = firebase.db;\n  var docRef = db.collection(\"users\").doc(user_id); //get user\n\n  docRef.get().then(function (doc) {\n    if (doc.exists) {\n      console.log(\"Document data:\");\n      get_posts_from_post_ID_list(firebase, doc.data().posts, callback);\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  });\n}\n\nfunction get_posts_from_post_ID_list(firebase, pID_list, callback) {\n  for (var i = 0; i < pID_list.length; i++) {\n    get_post(firebase, pID_list[i], callback);\n  }\n}\n\nfunction get_post(firebase, post_id, callback) {\n  //get db reference\n  var db = firebase.db;\n  var docRef = db.collection(\"posts\").doc(post_id);\n  docRef.get().then(function (doc) {\n    if (doc.exists) {\n      console.log(\"Document data:\");\n      callback(doc.data());\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  });\n}\n\nfunction get_all_post(firebase, callback) {\n  var list_posts = [];\n  help_get_all_post(firebase, post => {\n    list_posts.push(post);\n  });\n  callback(list_posts);\n}\n\nfunction help_get_all_post(firebase, callback) {\n  var db = firebase.db;\n  db.collection(\"posts\").get().then(function (querySnapshot) {\n    querySnapshot.forEach(function (doc) {\n      callback(doc.data());\n    });\n  });\n}\n\nexport { get_all_post_by_id };","map":{"version":3,"sources":["/Users/jiadaye/workspace/cirko/src/components/Firebase/getPosts.js"],"names":["get_all_post_by_id","firebase","user_id","callback","get_all_post_id_from_db","db","docRef","collection","doc","get","then","exists","console","log","get_posts_from_post_ID_list","data","posts","pID_list","i","length","get_post","post_id","get_all_post","list_posts","help_get_all_post","post","push","querySnapshot","forEach"],"mappings":"AAAA,SAASA,kBAAT,CAA4BC,QAA5B,EAAqCC,OAArC,EAA8CC,QAA9C,EAAuD;AACnDC,EAAAA,uBAAuB,CAACH,QAAD,EAAUC,OAAV,EAAmBC,QAAnB,CAAvB;AACH;;AAGD,SAASC,uBAAT,CAAiCH,QAAjC,EAA0CC,OAA1C,EAAmDC,QAAnD,EAA4D;AACxD;AACA,MAAIE,EAAE,GAAGJ,QAAQ,CAACI,EAAlB;AACA,MAAIC,MAAM,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BN,OAA3B,CAAb,CAHwD,CAIxD;;AACAI,EAAAA,MAAM,CAACG,GAAP,GAAaC,IAAb,CAAkB,UAASF,GAAT,EAAc;AAC5B,QAAIA,GAAG,CAACG,MAAR,EAAgB;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAC,MAAAA,2BAA2B,CAACb,QAAD,EAAUO,GAAG,CAACO,IAAJ,GAAWC,KAArB,EAA4Bb,QAA5B,CAA3B;AACH,KAHD,MAGO;AACH;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,GARD;AASH;;AAED,SAASC,2BAAT,CAAqCb,QAArC,EAA8CgB,QAA9C,EAAwDd,QAAxD,EAAiE;AAC7D,OAAK,IAAIe,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACD,QAAQ,CAACE,MAAxB,EAA+BD,CAAC,EAAhC,EACA;AACIE,IAAAA,QAAQ,CAACnB,QAAD,EAAUgB,QAAQ,CAACC,CAAD,CAAlB,EAAuBf,QAAvB,CAAR;AACH;AACJ;;AAED,SAASiB,QAAT,CAAkBnB,QAAlB,EAA2BoB,OAA3B,EAAmClB,QAAnC,EAA6C;AACzC;AACA,MAAIE,EAAE,GAAGJ,QAAQ,CAACI,EAAlB;AACA,MAAIC,MAAM,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2Ba,OAA3B,CAAb;AAEAf,EAAAA,MAAM,CAACG,GAAP,GAAaC,IAAb,CAAkB,UAASF,GAAT,EAAc;AAC5B,QAAIA,GAAG,CAACG,MAAR,EAAgB;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAV,MAAAA,QAAQ,CAACK,GAAG,CAACO,IAAJ,EAAD,CAAR;AACH,KAHD,MAGO;AACH;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,GARD;AASH;;AACD,SAASS,YAAT,CAAsBrB,QAAtB,EAAgCE,QAAhC,EAAyC;AACrC,MAAIoB,UAAU,GAAG,EAAjB;AACAC,EAAAA,iBAAiB,CAACvB,QAAD,EAAYwB,IAAD,IAAQ;AAACF,IAAAA,UAAU,CAACG,IAAX,CAAgBD,IAAhB;AAAuB,GAA3C,CAAjB;AACAtB,EAAAA,QAAQ,CAACoB,UAAD,CAAR;AACH;;AAED,SAASC,iBAAT,CAA2BvB,QAA3B,EAAqCE,QAArC,EAA+C;AAC3C,MAAIE,EAAE,GAAGJ,QAAQ,CAACI,EAAlB;AACAA,EAAAA,EAAE,CAACE,UAAH,CAAc,OAAd,EAAuBE,GAAvB,GAA6BC,IAA7B,CAAkC,UAASiB,aAAT,EAAwB;AACtDA,IAAAA,aAAa,CAACC,OAAd,CAAsB,UAASpB,GAAT,EAAc;AAChCL,MAAAA,QAAQ,CAACK,GAAG,CAACO,IAAJ,EAAD,CAAR;AACH,KAFD;AAGH,GAJD;AAKH;;AACD,SAAQf,kBAAR","sourcesContent":["function get_all_post_by_id(firebase,user_id, callback){\n    get_all_post_id_from_db(firebase,user_id, callback);\n}\n\n\nfunction get_all_post_id_from_db(firebase,user_id, callback){\n    //get db reference\n    var db = firebase.db;\n    var docRef = db.collection(\"users\").doc(user_id);\n    //get user\n    docRef.get().then(function(doc) {\n        if (doc.exists) {\n            console.log(\"Document data:\");\n            get_posts_from_post_ID_list(firebase,doc.data().posts, callback);\n        } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n    });\n}\n\nfunction get_posts_from_post_ID_list(firebase,pID_list, callback){\n    for (var i=0;i<pID_list.length;i++)\n    {\n        get_post(firebase,pID_list[i], callback);\n    }\n}\n\nfunction get_post(firebase,post_id,callback) {\n    //get db reference\n    var db = firebase.db;\n    var docRef = db.collection(\"posts\").doc(post_id);\n\n    docRef.get().then(function(doc) {\n        if (doc.exists) {\n            console.log(\"Document data:\");\n            callback(doc.data());\n        } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n    });\n}\nfunction get_all_post(firebase, callback){\n    var list_posts = [];\n    help_get_all_post(firebase, (post)=>{list_posts.push(post);})\n    callback(list_posts);\n}\n\nfunction help_get_all_post(firebase, callback) {\n    var db = firebase.db;\n    db.collection(\"posts\").get().then(function(querySnapshot) {\n        querySnapshot.forEach(function(doc) {\n            callback(doc.data());\n        });\n    });\n}\nexport {get_all_post_by_id,}"]},"metadata":{},"sourceType":"module"}