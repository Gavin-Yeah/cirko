{"ast":null,"code":"import \"antd-mobile/lib/button/style\";\nimport _Button from \"antd-mobile/lib/button\";\nimport \"antd-mobile/lib/input-item/style\";\nimport _InputItem from \"antd-mobile/lib/input-item\";\nimport _defineProperty from \"/Users/jiadaye/workspace/cirko/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd-mobile/lib/nav-bar/style\";\nimport _NavBar from \"antd-mobile/lib/nav-bar\";\nimport \"antd-mobile/lib/icon/style\";\nimport _Icon from \"antd-mobile/lib/icon\";\nvar _jsxFileName = \"/Users/jiadaye/workspace/cirko/src/components/SignUp/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport './index.css';\n\nconst SignUpPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(_NavBar, {\n  mode: \"light\",\n  icon: React.createElement(_Icon, {\n    type: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }),\n  onLeftClick: () => this.props.history.goBack(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, \"Sign Up\"), React.createElement(\"div\", {\n  className: \"icon1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"image\",\n  src: require(\"../icons/cirko-trans.png\"),\n  alt: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"icon2\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  className: \"appName\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"CIRKO\")), React.createElement(SignUpForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  userId: '',\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n  isAdmin: false\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const _this$state = this.state,\n            username = _this$state.username,\n            email = _this$state.email,\n            passwordOne = _this$state.passwordOne,\n            isAdmin = _this$state.isAdmin;\n      const roles = {};\n\n      if (isAdmin) {\n        roles[ROLES.ADMIN] = ROLES.ADMIN;\n      }\n\n      this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          avatarUrl: authUser.user.photoURL,\n          following: [],\n          followers: [],\n          posts: [],\n          posts_num: 0,\n          likes: [],\n          userId: authUser.user.uid,\n          username,\n          email,\n          roles\n        }, {\n          merge: true\n        });\n      }).then(authUser => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChangeUsername = event => {\n      this.setState({\n        username: event\n      });\n    };\n\n    this.onChangeEmail = event => {\n      this.setState({\n        email: event\n      });\n    };\n\n    this.onChangePasswordOne = event => {\n      this.setState({\n        passwordOne: event\n      });\n    };\n\n    this.onChangePasswordTwo = event => {\n      this.setState({\n        passwordTwo: event\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          username = _this$state2.username,\n          email = _this$state2.email,\n          passwordOne = _this$state2.passwordOne,\n          passwordTwo = _this$state2.passwordTwo,\n          error = _this$state2.error,\n          isAdmin = _this$state2.isAdmin;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(_InputItem, {\n      name: \"username\",\n      value: username,\n      onChange: this.onChangeUsername,\n      type: \"text\",\n      placeholder: \"Full Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(_InputItem, {\n      name: \"email\",\n      value: email,\n      onChange: this.onChangeEmail,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(_InputItem, {\n      name: \"passwordOne\",\n      value: passwordOne,\n      onChange: this.onChangePasswordOne,\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(_InputItem, {\n      name: \"passwordTwo\",\n      value: passwordTwo,\n      onChange: this.onChangePasswordTwo,\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      disabled: isInvalid,\n      type: \"primary\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Sign Up\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nconst SignUpLink = () => React.createElement(_Button, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155\n  },\n  __self: this\n}, \"Don't have an account? \", React.createElement(Link, {\n  to: ROUTES.SIGN_UP,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156\n  },\n  __self: this\n}, \"Sign Up\"));\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","map":{"version":3,"sources":["/Users/jiadaye/workspace/cirko/src/components/SignUp/index.js"],"names":["React","Component","Link","withRouter","ROUTES","ROLES","compose","withFirebase","SignUpPage","props","history","goBack","require","INITIAL_STATE","userId","username","email","passwordOne","passwordTwo","error","isAdmin","SignUpFormBase","constructor","onSubmit","event","state","roles","ADMIN","firebase","doCreateUserWithEmailAndPassword","then","authUser","user","uid","set","avatarUrl","photoURL","following","followers","posts","posts_num","likes","merge","setState","push","HOME","catch","preventDefault","onChangeUsername","onChangeEmail","onChangePasswordOne","onChangePasswordTwo","render","isInvalid","message","SignUpLink","SIGN_UP","SignUpForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\nimport { compose } from 'recompose';\nimport { Button, Icon, InputItem, NavBar } from 'antd-mobile'\nimport { withFirebase } from '../Firebase';\nimport './index.css'\nconst SignUpPage = () => (\n    <div>\n        <NavBar\n            mode=\"light\"\n            icon={<Icon type=\"left\" />}\n            onLeftClick={() => this.props.history.goBack()}\n        >Sign Up</NavBar>\n        <div className={\"icon1\"}>\n            <img className={\"image\"} src={require(\"../icons/cirko-trans.png\")} alt=\"\"/>\n        </div>\n        <div className={\"icon2\"}>\n            <h2 className={\"appName\"}>CIRKO</h2>\n        </div>\n        <SignUpForm />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    userId:'',\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n    isAdmin: false,\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { username, email, passwordOne, isAdmin } = this.state;\n        const roles = {};\n        if (isAdmin) {\n            roles[ROLES.ADMIN] = ROLES.ADMIN;\n        }\n        this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(authUser => {\n                // Create a user in your Firebase realtime database\n                return this.props.firebase\n                    .user(authUser.user.uid)\n                    .set({\n                            avatarUrl:authUser.user.photoURL,\n                            following: [],\n                            followers: [],\n                            posts: [],\n                            posts_num: 0,\n                            likes:[],\n                            userId:authUser.user.uid,\n                            username,\n                            email,\n                            roles,\n                        },\n                        {merge: true},\n                    );\n            })\n            .then(authUser => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n        event.preventDefault();\n\n\n\n    }\n    onChangeUsername = event => {\n        this.setState({ username: event});\n    };\n    onChangeEmail = event => {\n        this.setState({ email: event });\n    };\n    onChangePasswordOne = event => {\n        this.setState({ passwordOne: event });\n    };\n    onChangePasswordTwo = event => {\n        this.setState({ passwordTwo: event });\n    };\n\n\n    render() {\n        const {\n            username,\n            email,\n            passwordOne,\n            passwordTwo,\n            error,\n            isAdmin,\n        } = this.state;\n\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === '' ||\n            email === '' ||\n            username === '';\n\n        return (\n            <form >\n                <InputItem\n                    name=\"username\"\n                    value={username}\n                    onChange={this.onChangeUsername}\n                    type=\"text\"\n                    placeholder=\"Full Name\"\n                ></InputItem>\n                <InputItem\n                    name=\"email\"\n                    value={email}\n                    onChange={this.onChangeEmail}\n                    type=\"text\"\n                    placeholder=\"Email Address\"\n                ></InputItem>\n                <InputItem\n                    name=\"passwordOne\"\n                    value={passwordOne}\n                    onChange={this.onChangePasswordOne}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                ></InputItem>\n                <InputItem\n                    name=\"passwordTwo\"\n                    value={passwordTwo}\n                    onChange={this.onChangePasswordTwo}\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n\n                ></InputItem>\n\n\n\n                <Button disabled={isInvalid} type={\"primary\"} onClick={this.onSubmit}>Sign Up</Button>\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nconst SignUpLink = () => (\n    <Button>\n        Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </Button>\n);\nconst SignUpForm = compose(\n    withRouter,\n    withFirebase,\n)(SignUpFormBase);\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };"]},"metadata":{},"sourceType":"module"}