{"ast":null,"code":"var _jsxFileName = \"/Users/jiadaye/workspace/cirko/src/components/Comments/index.js\";\nimport React, { Component } from 'react';\nimport Comment from \"./Comment\";\nimport Item from '../Item';\nimport { withAuthorization } from \"../Session\";\n\nclass Comments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [{\n        id: 1,\n        userName: 'Nick',\n        time: '10:30 10/10/2019',\n        content: \"abc\",\n        likes: 5\n      }],\n      isWriteCommentClicked: false,\n      comment: \"\"\n    };\n    this.commentRef = React.createRef();\n\n    this.onCLickWriteCommentHandler = () => {\n      this.setState({\n        isWriteCommentClicked: true\n      });\n    };\n\n    this.onClickSubmitHandler = () => {\n      const comment = this.state.comment;\n      const commentObj = {\n        userName: 'Jack',\n        time: '10:31 10/10/2019',\n        content: comment,\n        likes: 0\n      };\n      let comments = [...this.state.comments];\n      comments.unshift(commentObj);\n      this.setState({\n        comments,\n        comment: \"\"\n      });\n    };\n\n    this.onClickCancelHandler = () => {\n      this.setState({\n        isWriteCommentClicked: false\n      });\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    let _this$state = this.state,\n        comments = _this$state.comments,\n        isWriteCommentClicked = _this$state.isWriteCommentClicked,\n        comment = _this$state.comment;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"reply\\uFF1A\"), React.createElement(\"h2\", {\n      style: {\n        display: comments.length > 0 ? 'none' : 'block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"no comment\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, comments.map(item => {\n      return React.createElement(Comment, Object.assign({\n        key: item.id\n      }, item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    }))), React.createElement(\"div\", {\n      style: {\n        display: isWriteCommentClicked ? 'block' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onClickCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"back\")), React.createElement(\"textarea\", {\n      name: \"comment\",\n      value: comment,\n      id: \"comment\",\n      cols: \"30\",\n      rows: \"10\",\n      ref: this.commentRef,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onClickSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"submit\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.onCLickWriteCommentHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"write a comment\")));\n  }\n\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Comments);","map":{"version":3,"sources":["/Users/jiadaye/workspace/cirko/src/components/Comments/index.js"],"names":["React","Component","Comment","Item","withAuthorization","Comments","state","comments","id","userName","time","content","likes","isWriteCommentClicked","comment","commentRef","createRef","onCLickWriteCommentHandler","setState","onClickSubmitHandler","commentObj","unshift","onClickCancelHandler","onChange","event","target","name","value","render","display","length","map","item","condition","authUser"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Comment from \"./Comment\";\nimport Item from '../Item'\nimport {withAuthorization} from \"../Session\";\nclass Comments extends Component {\n    state={\n        comments:[{id:1,userName:'Nick',time:'10:30 10/10/2019',content:\"abc\", likes:5}],\n        isWriteCommentClicked:false,\n        comment:\"\"\n    }\n    commentRef = React.createRef();\nonCLickWriteCommentHandler = ()=>{\n        this.setState({isWriteCommentClicked:true})\n}\nonClickSubmitHandler = ()=>{\n    const {comment} = this.state;\n    const commentObj = {userName:'Jack',time:'10:31 10/10/2019',content: comment, likes:0}\n    let comments = [...this.state.comments]\n    comments.unshift(commentObj);\n    this.setState({comments, comment: \"\"})\n\n}\n    onClickCancelHandler = ()=>{\n    this.setState({ isWriteCommentClicked:false})\n    }\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n    render() {\n        let {comments, isWriteCommentClicked,comment} = this.state;\n        return (\n            <div>\n\n            <div>\n                <h3 >replyï¼š</h3>\n                <h2 style={{display:comments.length>0?'none':'block'}}>no comment</h2>\n                <div >\n                    {\n                        comments.map((item)=>{\n                            return (\n                                <Comment key={item.id} {...item}/>\n                            )})\n                    }\n\n                </div>\n            </div>\n                <div style={{display:isWriteCommentClicked?'block':'none'}}>\n                    <div>\n                        <button onClick={this.onClickCancelHandler}>back</button></div>\n                    <textarea name=\"comment\" value={comment}id=\"comment\" cols=\"30\" rows=\"10\" ref={this.commentRef} onChange={this.onChange}></textarea>\n                    <button onClick={this.onClickSubmitHandler}>submit</button></div>\n                <div><a href=\"#\" onClick={this.onCLickWriteCommentHandler}>write a comment</a></div>\n            </div>\n        );\n    }\n}\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Comments);"]},"metadata":{},"sourceType":"module"}