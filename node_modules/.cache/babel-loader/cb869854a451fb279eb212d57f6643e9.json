{"ast":null,"code":"import \"antd-mobile/lib/tab-bar/style\";\nimport _TabBar from \"antd-mobile/lib/tab-bar\";\nvar _jsxFileName = \"/Users/jiadaye/workspace/cirko/src/components/Home/index.js\";\nimport React from 'react';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from \"../../constants/routes\";\nimport CreatePost from '../CreatePost';\nimport PostPage from './PostPage';\nimport './index.css';\nimport AccountPage from \"./Account\";\nimport { Route } from 'react-router-dom';\nimport EditAvatar from \"./Account/EditAvatar\";\nimport About from './Account/About';\nimport MyPosts from './Account/MyPosts';\nimport FavPosts from \"./Account/FavPosts\";\nimport EditName from \"./Account/EditName\";\nimport { compose } from \"recompose\";\nimport Comments from \"../Comments\";\nimport AddComment from \"../Comments/AddComment\";\n\nclass HomePage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      isAddClicked: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        position: 'fixed',\n        height: '100%',\n        width: '100%',\n        top: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: ROUTES.CREATEPOST,\n      component: CreatePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: ROUTES.COMMENTS,\n      component: Comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: ROUTES.ADDCOMMENT,\n      component: AddComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(_TabBar, {\n      unselectedTintColor: \"#a6daba\",\n      tintColor: \"#5396a5\",\n      barTintColor: \"#white\",\n      tabBarPosition: \"bottom\",\n      hidden: this.state.hidden,\n      prerenderingSiblingsNumber: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(_TabBar.Item, {\n      title: \"Post\",\n      key: \"Post\",\n      icon: React.createElement(\"div\", {\n        style: {\n          width: '22px',\n          height: '22px',\n          background: \"url(https://image.flaticon.com/icons/png/128/148/148845.png) center center /  21px 21px no-repeat\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }),\n      selectedIcon: React.createElement(\"div\", {\n        style: {\n          width: '22px',\n          height: '22px',\n          background: 'url(https://image.flaticon.com/icons/png/128/148/148845.png) center center /  21px 21px no-repeat'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }),\n      selected: this.state.selectedTab === 'postpage',\n      onPress: () => {\n        this.setState({\n          selectedTab: 'postpage'\n        });\n        this.props.history.push(ROUTES.POSTPAGE);\n      },\n      \"data-seed\": \"logId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: ROUTES.POSTPAGE,\n      component: PostPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(_TabBar.Item, {\n      icon: {\n        uri: 'https://image.flaticon.com/icons/png/128/124/124576.png'\n      },\n      selectedIcon: {\n        uri: 'https://image.flaticon.com/icons/png/128/124/124576.png'\n      },\n      title: \"My\",\n      key: \"my\",\n      selected: this.state.selectedTab === 'my',\n      onPress: () => {\n        this.setState({\n          selectedTab: 'my'\n        });\n        this.props.history.push(ROUTES.ACCOUNT);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: ROUTES.ACCOUNT,\n      component: AccountPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: ROUTES.EDITAVATAR,\n      component: EditAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: ROUTES.EDITNAME,\n      component: EditName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: ROUTES.MYPOSTS,\n      component: MyPosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: ROUTES.FAVPOSTS,\n      component: FavPosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: ROUTES.ABOUT,\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst condition = authUser => !!authUser;\n\nHomePage = compose(withAuthorization(condition))(HomePage);\nexport default HomePage;","map":{"version":3,"sources":["/Users/jiadaye/workspace/cirko/src/components/Home/index.js"],"names":["React","withAuthorization","ROUTES","CreatePost","PostPage","AccountPage","Route","EditAvatar","About","MyPosts","FavPosts","EditName","compose","Comments","AddComment","HomePage","Component","state","posts","isAddClicked","render","position","height","width","top","CREATEPOST","COMMENTS","ADDCOMMENT","hidden","background","selectedTab","setState","props","history","push","POSTPAGE","uri","ACCOUNT","EDITAVATAR","EDITNAME","MYPOSTS","FAVPOSTS","ABOUT","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from \"../../constants/routes\";\nimport CreatePost from '../CreatePost'\nimport PostPage from './PostPage'\nimport { TabBar } from 'antd-mobile';\nimport './index.css'\nimport AccountPage from \"./Account\";\nimport { Route } from 'react-router-dom'\nimport EditAvatar from \"./Account/EditAvatar\";\nimport About from './Account/About'\nimport MyPosts from './Account/MyPosts';\nimport FavPosts from \"./Account/FavPosts\";\nimport EditName from \"./Account/EditName\";\nimport { compose } from \"recompose\";\nimport Comments from \"../Comments\";\nimport AddComment from \"../Comments/AddComment\";\n\nclass HomePage extends React.Component {\n\n    state = {\n        posts: [],\n        isAddClicked: false\n    }\n\n\n\n    render() {\n\n        return (\n\n            <div style={{ position: 'fixed', height: '100%', width: '100%', top: 0 }}>\n                <Route path={ROUTES.CREATEPOST} component={CreatePost} />\n                <Route path={ROUTES.COMMENTS} component={Comments} />\n                <Route path={ROUTES.ADDCOMMENT} component={AddComment} />\n\n\n                <TabBar\n                    unselectedTintColor=\"#a6daba\"\n                    tintColor=\"#5396a5\"\n                    barTintColor=\"#white\"\n                    tabBarPosition=\"bottom\"\n                    hidden={this.state.hidden}\n                    prerenderingSiblingsNumber={0}\n                >\n                    <TabBar.Item\n                        title=\"Post\"\n                        key=\"Post\"\n                        icon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: `url(https://image.flaticon.com/icons/png/128/148/148845.png) center center /  21px 21px no-repeat` }}\n                        />\n                        }\n                        selectedIcon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://image.flaticon.com/icons/png/128/148/148845.png) center center /  21px 21px no-repeat' }}\n                        />\n                        }\n                        selected={this.state.selectedTab === 'postpage'}\n\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'postpage',\n                            });\n                            this.props.history.push(ROUTES.POSTPAGE)\n                        }}\n                        data-seed=\"logId\"\n                    >\n\n                      <Route path={ROUTES.POSTPAGE} component={PostPage}/>\n                    </TabBar.Item>\n\n                    {/*<TabBar.Item*/}\n                    {/*    icon={*/}\n                    {/*        <div style={{*/}\n                    {/*            width: '22px',*/}\n                    {/*            height: '22px',*/}\n                    {/*            background: 'url(https://image.flaticon.com/icons/png/128/148/148800.png) center center /  21px 21px no-repeat' }}*/}\n                    {/*        />*/}\n                    {/*    }*/}\n                    {/*    selectedIcon={*/}\n                    {/*        <div style={{*/}\n                    {/*            width: '22px',*/}\n                    {/*            height: '22px',*/}\n                    {/*            background: 'url(https://image.flaticon.com/icons/png/128/148/148800.png) center center /  21px 21px no-repeat' }}*/}\n                    {/*        />*/}\n                    {/*    }*/}\n                    {/*    title=\"Following\"*/}\n                    {/*    key=\"Following\"*/}\n                    {/*    selected={this.state.selectedTab === 'following'}*/}\n                    {/*    onPress={() => {*/}\n                    {/*        this.setState({*/}\n                    {/*            selectedTab: 'following',*/}\n                    {/*        });*/}\n                    {/*        this.props.history.push(ROUTES.FOLLOWING)*/}\n                    {/*    }}*/}\n                    {/*>*/}\n                    {/*    <Route path={ROUTES.FOLLOWING} component={Following}/>*/}\n                    {/*</TabBar.Item>*/}\n                     <TabBar.Item\n                        icon={{ uri: 'https://image.flaticon.com/icons/png/128/124/124576.png' }}\n                        selectedIcon={{ uri: 'https://image.flaticon.com/icons/png/128/124/124576.png' }}\n                        title=\"My\"\n                        key=\"my\"\n                        selected={this.state.selectedTab === 'my'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'my',\n                            });\n                            this.props.history.push(ROUTES.ACCOUNT)\n\n                        }}\n                    >\n                       <Route path={ROUTES.ACCOUNT} component={AccountPage}/>\n                         <Route path={ROUTES.EDITAVATAR} component={EditAvatar}/>\n                         <Route path={ROUTES.EDITNAME} component={EditName}/>\n                         <Route path={ROUTES.MYPOSTS} component={MyPosts}/>\n                         <Route path={ROUTES.FAVPOSTS} component={FavPosts}/>\n                         <Route path={ROUTES.ABOUT} component={About}/>\n                     </TabBar.Item>\n\n                </TabBar>\n            </div>\n        );\n    }\n\n}\n\nconst condition = authUser => !!authUser;\nHomePage = compose(\n\n    withAuthorization(condition),\n\n)(HomePage);\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}