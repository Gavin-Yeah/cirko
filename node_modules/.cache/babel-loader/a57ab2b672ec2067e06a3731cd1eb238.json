{"ast":null,"code":"import \"antd-mobile/lib/button/style\";\nimport _Button from \"antd-mobile/lib/button\";\nimport \"antd-mobile/lib/input-item/style\";\nimport _InputItem from \"antd-mobile/lib/input-item\";\nimport _defineProperty from \"/Users/jiadaye/workspace/cirko/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jiadaye/workspace/cirko/src/components/SignUp/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\n\nconst SignUpPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, \"SignUp\"), React.createElement(SignUpForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n  isAdmin: false\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const _this$state = this.state,\n            username = _this$state.username,\n            email = _this$state.email,\n            passwordOne = _this$state.passwordOne,\n            isAdmin = _this$state.isAdmin;\n      const roles = {};\n\n      if (isAdmin) {\n        roles[ROLES.ADMIN] = ROLES.ADMIN;\n      }\n\n      this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          roles\n        }, {\n          merge: true\n        });\n      }).then(authUser => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChangeUsername = event => {\n      this.setState({\n        username: event\n      });\n    };\n\n    this.onChangeEmail = event => {\n      this.setState({\n        email: event\n      });\n    };\n\n    this.onChangePasswordOne = event => {\n      this.setState({\n        passwordOne: event\n      });\n    };\n\n    this.onChangePasswordTwo = event => {\n      this.setState({\n        passwordTwo: event\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          username = _this$state2.username,\n          email = _this$state2.email,\n          passwordOne = _this$state2.passwordOne,\n          passwordTwo = _this$state2.passwordTwo,\n          error = _this$state2.error,\n          isAdmin = _this$state2.isAdmin;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(_InputItem, {\n      name: \"username\",\n      value: username,\n      onChange: this.onChangeUsername,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Full Name\"), React.createElement(_InputItem, {\n      name: \"email\",\n      value: email,\n      onChange: this.onChangeEmail,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Email Address\"), React.createElement(_InputItem, {\n      name: \"passwordOne\",\n      value: passwordOne,\n      onChange: this.onChangePasswordOne,\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(_InputItem, {\n      name: \"passwordTwo\",\n      value: passwordTwo,\n      onChange: this.onChangePasswordTwo,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(_Button, {\n      disabled: isInvalid,\n      type: \"submit\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Sign Up\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nconst SignUpLink = () => React.createElement(_Button, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135\n  },\n  __self: this\n}, \"Don't have an account? \", React.createElement(Link, {\n  to: ROUTES.SIGN_UP,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136\n  },\n  __self: this\n}, \"Sign Up\"));\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","map":{"version":3,"sources":["/Users/jiadaye/workspace/cirko/src/components/SignUp/index.js"],"names":["React","Component","Link","withRouter","ROUTES","ROLES","compose","withFirebase","SignUpPage","INITIAL_STATE","username","email","passwordOne","passwordTwo","error","isAdmin","SignUpFormBase","constructor","props","onSubmit","event","state","roles","ADMIN","firebase","doCreateUserWithEmailAndPassword","then","authUser","user","uid","set","merge","setState","history","push","HOME","catch","preventDefault","onChangeUsername","onChangeEmail","onChangePasswordOne","onChangePasswordTwo","render","isInvalid","message","SignUpLink","SIGN_UP","SignUpForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\nimport { compose } from 'recompose';\nimport {Button, InputItem}from 'antd-mobile'\nimport { withFirebase } from '../Firebase';\nconst SignUpPage = () => (\n    <div>\n        <h1>SignUp</h1>\n        <SignUpForm />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n    isAdmin: false,\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { username, email, passwordOne, isAdmin } = this.state;\n        const roles = {};\n        if (isAdmin) {\n            roles[ROLES.ADMIN] = ROLES.ADMIN;\n        }\n        this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(authUser => {\n                // Create a user in your Firebase realtime database\n                return this.props.firebase\n                    .user(authUser.user.uid)\n                    .set({\n                            username,\n                            email,\n                            roles,\n                        },\n                        {merge: true},\n                    );\n            })\n            .then(authUser => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n        event.preventDefault();\n\n\n\n    }\n    onChangeUsername = event => {\n        this.setState({ username: event});\n    };\n    onChangeEmail = event => {\n        this.setState({ email: event });\n    };\n    onChangePasswordOne = event => {\n        this.setState({ passwordOne: event });\n    };\n    onChangePasswordTwo = event => {\n        this.setState({ passwordTwo: event });\n    };\n\n\n    render() {\n        const {\n            username,\n            email,\n            passwordOne,\n            passwordTwo,\n            error,\n            isAdmin,\n        } = this.state;\n\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === '' ||\n            email === '' ||\n            username === '';\n\n        return (\n            <form >\n                <InputItem\n                    name=\"username\"\n                    value={username}\n                    onChange={this.onChangeUsername}\n                    type=\"text\"\n\n                >Full Name</InputItem>\n                <InputItem\n                    name=\"email\"\n                    value={email}\n                    onChange={this.onChangeEmail}\n                    type=\"text\"\n\n                >Email Address</InputItem>\n                <InputItem\n                    name=\"passwordOne\"\n                    value={passwordOne}\n                    onChange={this.onChangePasswordOne}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                ></InputItem>\n                <InputItem\n                    name=\"passwordTwo\"\n                    value={passwordTwo}\n                    onChange={this.onChangePasswordTwo}\n                    type=\"password\"\n\n                >Confirm Password</InputItem>\n\n\n\n                <Button disabled={isInvalid} type=\"submit\" onClick={this.onSubmit}>Sign Up</Button>\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nconst SignUpLink = () => (\n    <Button>\n        Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </Button>\n);\nconst SignUpForm = compose(\n    withRouter,\n    withFirebase,\n)(SignUpFormBase);\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };"]},"metadata":{},"sourceType":"module"}