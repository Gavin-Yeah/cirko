{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jiadaye/workspace/cirko/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jiadaye/workspace/cirko/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";function get_all_post_by_id(_x,_x2){return _get_all_post_by_id.apply(this,arguments);}function _get_all_post_by_id(){_get_all_post_by_id=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(firebase,user_id){var db,docRef,doc;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://get db reference\ndb=firebase.db;docRef=db.collection(\"users\").doc(user_id);//get user\n_context.next=4;return docRef.get();case 4:doc=_context.sent;if(!doc.exists){_context.next=11;break;}_context.next=8;return get_posts_from_post_ID_list(firebase,doc.data().posts);case 8:return _context.abrupt(\"return\",_context.sent);case 11:// doc.data() will be undefined in this case\nconsole.log(\"No such document!\");case 12:case\"end\":return _context.stop();}}},_callee);}));return _get_all_post_by_id.apply(this,arguments);}function get_all_liked_posts(_x3,_x4){return _get_all_liked_posts.apply(this,arguments);}function _get_all_liked_posts(){_get_all_liked_posts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(firebase,user_id){var db,docRef,doc;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:db=firebase.db;docRef=db.collection(\"users\").doc(user_id);//get user\n_context2.next=4;return docRef.get();case 4:doc=_context2.sent;if(!doc.exists){_context2.next=11;break;}_context2.next=8;return get_posts_from_post_ID_list(firebase,doc.data().likes);case 8:return _context2.abrupt(\"return\",_context2.sent);case 11:// doc.data() will be undefined in this case\nconsole.log(\"No such document!\");case 12:case\"end\":return _context2.stop();}}},_callee2);}));return _get_all_liked_posts.apply(this,arguments);}function get_all_post_id_from_db(firebase,user_id,callback){//get db reference\nvar db=firebase.db;var docRef=db.collection(\"users\").doc(user_id);//get user\ndocRef.get().then(function(doc){if(doc.exists){console.log(\"Document data:\");get_posts_from_post_ID_list(firebase,doc.data().posts,callback);}else{// doc.data() will be undefined in this case\nconsole.log(\"No such document!\");}});}function get_posts_from_post_ID_list(_x5,_x6){return _get_posts_from_post_ID_list.apply(this,arguments);}function _get_posts_from_post_ID_list(){_get_posts_from_post_ID_list=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(firebase,pID_list){var list_posts,i,post;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:list_posts=[];i=0;case 2:if(!(i<pID_list.length)){_context3.next=10;break;}_context3.next=5;return get_post(firebase,pID_list[i]);case 5:post=_context3.sent;if(post){list_posts.unshift(post);}case 7:i++;_context3.next=2;break;case 10:return _context3.abrupt(\"return\",list_posts);case 11:case\"end\":return _context3.stop();}}},_callee3);}));return _get_posts_from_post_ID_list.apply(this,arguments);}function get_post(_x7,_x8){return _get_post.apply(this,arguments);}function _get_post(){_get_post=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(firebase,post_id){var db,docRef,doc;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0://get db reference\ndb=firebase.db;docRef=db.collection(\"posts\").doc(post_id);_context4.next=4;return docRef.get();case 4:doc=_context4.sent;if(!doc.exists){_context4.next=9;break;}return _context4.abrupt(\"return\",doc.data());case 9:// doc.data() will be undefined in this case\nconsole.log(\"No such document!\");case 10:return _context4.abrupt(\"return\");case 11:case\"end\":return _context4.stop();}}},_callee4);}));return _get_post.apply(this,arguments);}function get_all_post(firebase,callback){var promise=new Promise(function(resolve,reject){var list_posts=[];help_get_all_post(firebase,function(post){list_posts.unshift(post);resolve(list_posts);});});promise.then(function(data){console.log(data);callback(data);});}function help_get_all_post(firebase,callback){var db=firebase.db;db.collection(\"posts\").get().then(function(querySnapshot){querySnapshot.forEach(function(doc){callback(doc.data());});});}// function fliter(firebase,list_posts, distance, user_location, callback){\n//     let location_str = \"\";\n//     let mydestinations = [];\n//     console.log(list_posts);\n//     for(let i = 0; i<list_posts.length; i++) {\n//         mydestinations.push(new google.maps.LatLng(list_posts[i].location.lat, list_posts[i].location.lng));\n//     }\n//     let ori = new google.maps.LatLng(user_location.lat, user_location.lng);\n//     var service = new google.maps.DistanceMatrixService();\n//     let return_list = [];\n//     service.getDistanceMatrix(\n//         {\n//             origins: user_location,\n//             destinations: mydestinations,\n//             travelMode: 'WALKING'\n//         }, ()=>{return_list = fliter_help(response, status, distance, list_posts)\n//             callback(return_list);\n//         });\n// }\n//\n// function fliter_help(response, status, dis, list_posts) {\n//     let distances = [];\n//     let return_list = [];\n//     if (status == 'OK') {\n//         var origins = response.originAddresses;\n//         var destinations = response.destinationAddresses;\n//\n//         for (var i = 0; i < origins.length; i++) {\n//             var results = response.rows[i].elements;\n//             for (var j = 0; j < results.length; j++) {\n//                 var element = results[j];\n//                 var distance = element.distance.text;\n//                 distances.push(distance);\n//                 var duration = element.duration.text;\n//                 var from = origins[i];\n//                 var to = destinations[j];\n//             }\n//         }\n//\n//         for(let i = 0; i < distances.length; i++) {\n//             if(distances[i] < dis) {\n//                 return_list.push(list_posts[i]);\n//             }\n//         }\n//         return return_list;\n//     }\n//     return return_list;\n// }\nexport{get_all_post_by_id,get_all_post,get_post,get_all_liked_posts};","map":{"version":3,"sources":["/Users/jiadaye/workspace/cirko/src/components/Firebase/getPosts.js"],"names":["get_all_post_by_id","firebase","user_id","db","docRef","collection","doc","get","exists","get_posts_from_post_ID_list","data","posts","console","log","get_all_liked_posts","likes","get_all_post_id_from_db","callback","then","pID_list","list_posts","i","length","get_post","post","unshift","post_id","get_all_post","promise","Promise","resolve","reject","help_get_all_post","querySnapshot","forEach"],"mappings":"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","sourcesContent":["async function get_all_post_by_id(firebase, user_id) {\n    //get db reference\n    var db = firebase.db;\n    var docRef = db.collection(\"users\").doc(user_id);\n    //get user\n    let doc = await docRef.get();\n    if (doc.exists) {\n        return await get_posts_from_post_ID_list(firebase, doc.data().posts);\n    } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n    }\n}\n\n\nasync function get_all_liked_posts(firebase, user_id) {\n\n\n    var db = firebase.db;\n    var docRef = db.collection(\"users\").doc(user_id);\n    //get user\n    let doc = await docRef.get();\n    if (doc.exists) {\n        return await get_posts_from_post_ID_list(firebase, doc.data().likes);\n    } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n    }\n\n}\n\n\n\nfunction get_all_post_id_from_db(firebase,user_id, callback){\n    //get db reference\n    var db = firebase.db;\n    var docRef = db.collection(\"users\").doc(user_id);\n    //get user\n    docRef.get().then(function(doc) {\n        if (doc.exists) {\n            console.log(\"Document data:\");\n            get_posts_from_post_ID_list(firebase,doc.data().posts, callback);\n        } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n    });\n}\n\nasync function get_posts_from_post_ID_list(firebase, pID_list) {\n    var list_posts = [];\n    for (var i = 0; i < pID_list.length; i++) {\n        let post = await get_post(firebase, pID_list[i]);\n        if(post){\n            list_posts.unshift(post);\n        }\n\n    }\n    return list_posts;\n}\n\nasync function get_post(firebase, post_id){\n    //get db reference\n    var db = firebase.db;\n    var docRef = db.collection(\"posts\").doc(post_id);\n\n    var doc = await docRef.get();\n    if (doc.exists) {\n        return(doc.data());\n    } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n    }\n    return ;\n\n}\nfunction get_all_post(firebase, callback){\n\n    let promise = new Promise(function(resolve, reject){\n        var list_posts = [];\n        help_get_all_post(firebase, (post)=>{list_posts.unshift(post);\n\n            resolve(list_posts)\n\n        })\n\n    });\n    promise.then((data)=>{\n        console.log(data)\n        callback(data);\n    })\n\n}\n\nfunction help_get_all_post(firebase, callback) {\n    var db = firebase.db;\n    db.collection(\"posts\").get().then(function(querySnapshot) {\n        querySnapshot.forEach(function(doc) {\n            callback(doc.data());\n        });\n    });\n}\n\n\n\n\n// function fliter(firebase,list_posts, distance, user_location, callback){\n//     let location_str = \"\";\n//     let mydestinations = [];\n//     console.log(list_posts);\n//     for(let i = 0; i<list_posts.length; i++) {\n//         mydestinations.push(new google.maps.LatLng(list_posts[i].location.lat, list_posts[i].location.lng));\n//     }\n//     let ori = new google.maps.LatLng(user_location.lat, user_location.lng);\n//     var service = new google.maps.DistanceMatrixService();\n//     let return_list = [];\n//     service.getDistanceMatrix(\n//         {\n//             origins: user_location,\n//             destinations: mydestinations,\n//             travelMode: 'WALKING'\n//         }, ()=>{return_list = fliter_help(response, status, distance, list_posts)\n//             callback(return_list);\n//         });\n// }\n//\n// function fliter_help(response, status, dis, list_posts) {\n//     let distances = [];\n//     let return_list = [];\n//     if (status == 'OK') {\n//         var origins = response.originAddresses;\n//         var destinations = response.destinationAddresses;\n//\n//         for (var i = 0; i < origins.length; i++) {\n//             var results = response.rows[i].elements;\n//             for (var j = 0; j < results.length; j++) {\n//                 var element = results[j];\n//                 var distance = element.distance.text;\n//                 distances.push(distance);\n//                 var duration = element.duration.text;\n//                 var from = origins[i];\n//                 var to = destinations[j];\n//             }\n//         }\n//\n//         for(let i = 0; i < distances.length; i++) {\n//             if(distances[i] < dis) {\n//                 return_list.push(list_posts[i]);\n//             }\n//         }\n//         return return_list;\n//     }\n//     return return_list;\n// }\n\n\n\n\n\n\n\n\nexport {get_all_post_by_id,get_all_post, get_post,get_all_liked_posts}"]},"metadata":{},"sourceType":"module"}