{"ast":null,"code":"import \"antd-mobile/lib/button/style\";\nimport _Button from \"antd-mobile/lib/button\";\nimport \"antd-mobile/lib/flex/style\";\nimport _Flex from \"antd-mobile/lib/flex\";\nimport \"antd-mobile/lib/nav-bar/style\";\nimport _NavBar from \"antd-mobile/lib/nav-bar\";\nimport \"antd-mobile/lib/icon/style\";\nimport _Icon from \"antd-mobile/lib/icon\";\nimport \"antd-mobile/lib/list-view/style\";\nimport _ListView from \"antd-mobile/lib/list-view\";\nimport _defineProperty from \"/Users/jiadaye/workspace/cirko/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jiadaye/workspace/cirko/src/components/Comments/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { NavLink } from \"react-router-dom\";\nconst data = [{\n  title: 'Meet hotel',\n  des: '不是所有的兼职汪都需要风吹日晒',\n  id: 1\n}, {\n  title: 'McDonald\\'s invites you',\n  des: '不是所有的兼职汪都需要风吹日晒',\n  id: 2\n}, {\n  title: 'Eat the week',\n  des: '不是所有的兼职汪都需要风吹日晒',\n  id: 3\n}];\nconst NUM_SECTIONS = 5;\nconst NUM_ROWS_PER_SECTION = 5;\nlet pageIndex = 0;\nconst NUM_ROWS = 20;\nconst dataBlobs = {};\nlet sectionIDs = [];\nlet rowIDs = [];\n\nfunction genData(pIndex = 0) {\n  const dataBlob = {};\n\n  for (let i = 0; i < NUM_ROWS; i++) {\n    const ii = pIndex * NUM_ROWS + i;\n    dataBlob[\"\".concat(ii)] = \"row - \".concat(ii);\n  }\n\n  return dataBlob;\n}\n\nexport default class Comments extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onEndReached = event => {\n      // load new data\n      // hasMore: from backend data, indicates whether it is the last page, here is false\n      if (this.state.isLoading && !this.state.hasMore) {\n        return;\n      }\n\n      console.log('reach end', event);\n      this.setState({\n        isLoading: true\n      });\n      setTimeout(() => {\n        this.rData = _objectSpread({}, this.rData, {}, genData(++pageIndex));\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRows(this.rData),\n          isLoading: false\n        });\n      }, 1000);\n    };\n\n    const getSectionData = (dataBlob, sectionID) => dataBlob[sectionID];\n\n    const getRowData = (dataBlob, sectionID, rowID) => dataBlob[rowID];\n\n    const dataSource = new _ListView.DataSource({\n      getRowData,\n      getSectionHeaderData: getSectionData,\n      rowHasChanged: (row1, row2) => row1 !== row2,\n      sectionHeaderHasChanged: (s1, s2) => s1 !== s2\n    });\n    this.state = {\n      dataSource,\n      isLoading: true,\n      height: document.documentElement.clientHeight\n    };\n  }\n\n  componentDidMount() {\n    // you can scroll to the specified position\n    // setTimeout(() => this.lv.scrollTo(0, 120), 800);\n    // simulate initial Ajax\n    setTimeout(() => {\n      this.rData = genData();\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(this.rData),\n        isLoading: false\n      });\n    }, 600);\n  }\n\n  render() {\n    const separator = (sectionID, rowID) => React.createElement(\"div\", {\n      key: \"\".concat(sectionID, \"-\").concat(rowID),\n      style: {\n        backgroundColor: '#F5F5F9',\n        height: 8,\n        borderTop: '1px solid #ECECED',\n        borderBottom: '1px solid #ECECED'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n\n    let index = data.length - 1;\n\n    const row = (rowData, sectionID, rowID) => {\n      if (index < 0) {\n        index = data.length - 1;\n      }\n\n      const obj = data[index--];\n      return React.createElement(\"div\", {\n        key: rowID,\n        style: {\n          padding: '0 15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(_NavBar, {\n        style: {\n          position: 'fixed',\n          width: \"100%\",\n          top: 0,\n          zIndex: 1\n        },\n        mode: \"light\",\n        icon: React.createElement(_Icon, {\n          type: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }),\n        onLeftClick: () => {\n          this.props.history.goBack();\n        },\n        rightContent: React.createElement(\"div\", {\n          onClick: this.onClickAdd,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \" \", React.createElement(\"img\", {\n          style: {\n            width: '30px',\n            marginRight: '16px'\n          },\n          src: \"https://image.flaticon.com/icons/png/128/148/148781.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"comments\")), React.createElement(\"div\", {\n        style: {\n          lineHeight: '50px',\n          color: '#888',\n          fontSize: 18,\n          borderBottom: '1px solid #F6F6F6'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, obj.title), React.createElement(_Flex, {\n        style: {\n          padding: '15px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          lineHeight: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginBottom: '8px',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, obj.des), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: '30px',\n          color: '#FF6E27'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, rowID), \"\\xA5\"))), React.createElement(_Flex, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(_Flex.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Like\"))));\n    };\n\n    return React.createElement(_ListView, {\n      ref: el => this.lv = el,\n      dataSource: this.state.dataSource,\n      renderFooter: () => React.createElement(\"div\", {\n        style: {\n          padding: 30,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, this.state.isLoading ? 'Loading...' : 'Loaded'),\n      renderRow: row,\n      renderSeparator: separator,\n      style: {\n        height: this.state.height,\n        overflow: 'auto'\n      },\n      className: \"am-list\",\n      pageSize: 4,\n      onScroll: () => {\n        console.log('scroll');\n      },\n      scrollRenderAheadDistance: 500,\n      onEndReached: this.onEndReached,\n      onEndReachedThreshold: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/jiadaye/workspace/cirko/src/components/Comments/index.js"],"names":["React","ReactDOM","NavLink","data","title","des","id","NUM_SECTIONS","NUM_ROWS_PER_SECTION","pageIndex","NUM_ROWS","dataBlobs","sectionIDs","rowIDs","genData","pIndex","dataBlob","i","ii","Comments","Component","constructor","props","onEndReached","event","state","isLoading","hasMore","console","log","setState","setTimeout","rData","dataSource","cloneWithRows","getSectionData","sectionID","getRowData","rowID","DataSource","getSectionHeaderData","rowHasChanged","row1","row2","sectionHeaderHasChanged","s1","s2","height","document","documentElement","clientHeight","componentDidMount","render","separator","backgroundColor","borderTop","borderBottom","index","length","row","rowData","obj","padding","position","width","top","zIndex","history","goBack","onClickAdd","marginRight","lineHeight","color","fontSize","marginBottom","fontWeight","el","lv","textAlign","overflow"],"mappings":"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","sourcesContent":["import {Button, Flex, Icon, ListView, NavBar, TabBar} from 'antd-mobile';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\"\nimport {NavLink} from \"react-router-dom\";\n\nconst data = [\n    {\n\n        title: 'Meet hotel',\n        des: '不是所有的兼职汪都需要风吹日晒',\n        id:1,\n    },\n    {\n\n        title: 'McDonald\\'s invites you',\n        des: '不是所有的兼职汪都需要风吹日晒',\n        id:2,\n    },\n    {\n\n        title: 'Eat the week',\n        des: '不是所有的兼职汪都需要风吹日晒',\n        id:3,\n    },\n];\nconst NUM_SECTIONS = 5;\nconst NUM_ROWS_PER_SECTION = 5;\nlet pageIndex = 0;\nconst NUM_ROWS = 20;\nconst dataBlobs = {};\nlet sectionIDs = [];\nlet rowIDs = [];\nfunction genData(pIndex = 0) {\n    const dataBlob = {};\n    for (let i = 0; i < NUM_ROWS; i++) {\n        const ii = (pIndex * NUM_ROWS) + i;\n        dataBlob[`${ii}`] = `row - ${ii}`;\n    }\n    return dataBlob;\n}\n\nexport  default class Comments extends React.Component {\n    constructor(props) {\n        super(props);\n        const getSectionData = (dataBlob, sectionID) => dataBlob[sectionID];\n        const getRowData = (dataBlob, sectionID, rowID) => dataBlob[rowID];\n\n        const dataSource = new ListView.DataSource({\n            getRowData,\n            getSectionHeaderData: getSectionData,\n            rowHasChanged: (row1, row2) => row1 !== row2,\n            sectionHeaderHasChanged: (s1, s2) => s1 !== s2,\n        });\n\n        this.state = {\n            dataSource,\n            isLoading: true,\n            height: document.documentElement.clientHeight ,\n        };\n    }\n\n    componentDidMount() {\n        // you can scroll to the specified position\n        // setTimeout(() => this.lv.scrollTo(0, 120), 800);\n\n        // simulate initial Ajax\n        setTimeout(() => {\n            this.rData = genData();\n            this.setState({\n                dataSource: this.state.dataSource.cloneWithRows(this. rData),\n                isLoading: false,\n            });\n        }, 600);\n    }\n\n    onEndReached = (event) => {\n        // load new data\n        // hasMore: from backend data, indicates whether it is the last page, here is false\n        if (this.state.isLoading && !this.state.hasMore) {\n            return;\n        }\n        console.log('reach end', event);\n        this.setState({ isLoading: true });\n        setTimeout(() => {\n            this.rData = { ...this.rData, ...genData(++pageIndex) };\n            this.setState({\n                dataSource: this.state.dataSource.cloneWithRows(this.rData),\n                isLoading: false,\n            });\n        }, 1000);\n    }\n\n\n\n\n    render() {\n        const separator = (sectionID, rowID) => (\n            <div\n                key={`${sectionID}-${rowID}`}\n                style={{\n                    backgroundColor: '#F5F5F9',\n                    height: 8,\n                    borderTop: '1px solid #ECECED',\n                    borderBottom: '1px solid #ECECED',\n                }}\n            />\n        );\n        let index = data.length - 1;\n        const row = (rowData, sectionID, rowID) => {\n            if (index < 0) {\n                index = data.length - 1;\n            }\n            const obj = data[index--];\n            return (\n                <div key={rowID} style={{ padding: '0 15px' }}>\n                    <NavBar\n                        style={{position:'fixed',width:\"100%\", top:0,zIndex:1}}\n                        mode=\"light\"\n                        icon={<Icon type=\"left\" />}\n                        onLeftClick={() => {this.props.history.goBack()}}\n                        rightContent={\n                            <div onClick={this.onClickAdd}> <img style={{width: '30px' ,marginRight:'16px'}}\n                                                                 src=\"https://image.flaticon.com/icons/png/128/148/148781.png\" alt=\"\"/>\n                            </div>\n\n                        }\n                    ><h3>comments</h3></NavBar>\n                    <div\n                        style={{\n                            lineHeight: '50px',\n                            color: '#888',\n                            fontSize: 18,\n                            borderBottom: '1px solid #F6F6F6',\n                        }}\n                    >{obj.title}</div>\n                    <Flex style={{  padding: '15px 0' }}>\n\n                        <div style={{ lineHeight: 1 }}>\n                            <div style={{ marginBottom: '8px', fontWeight: 'bold' }}>{obj.des}</div>\n                            <div><span style={{ fontSize: '30px', color: '#FF6E27' }}>{rowID}</span>¥</div>\n                        </div>\n                    </Flex>\n                    <Flex>\n\n                        <Flex.Item><Button>Like</Button></Flex.Item>\n                    </Flex>\n                </div>\n            );\n        };\n        return (\n\n            <ListView\n                ref={el => this.lv = el}\n                dataSource={this.state.dataSource}\n\n                renderFooter={() => (<div style={{ padding: 30, textAlign: 'center' }}>\n                    {this.state.isLoading ? 'Loading...' : 'Loaded'}\n                </div>)}\n\n                renderRow={row}\n                renderSeparator={separator}\n\n                style={{\n                    height: this.state.height,\n                    overflow: 'auto',\n                }}\n                className=\"am-list\"\n                pageSize={4}\n                onScroll={() => { console.log('scroll'); }}\n                scrollRenderAheadDistance={500}\n                onEndReached={this.onEndReached}\n                onEndReachedThreshold={10}\n            />\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}